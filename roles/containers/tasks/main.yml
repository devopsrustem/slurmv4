# roles/containers/tasks/main.yml
---
# –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï - –¢–û–õ–¨–ö–û –ü–†–û–ë–õ–ï–ú–ê –° PYXIS + –î–û–ë–ê–í–õ–Ø–ï–ú ENROOT+CAPS

- name: "[CONTAINERS] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Pyxis + –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ enroot+caps"
  debug:
    msg: "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º Pyxis + –¥–æ–±–∞–≤–ª—è–µ–º enroot+caps –¥–ª—è compute —É–∑–ª–æ–≤"

- name: "[CONTAINERS] –ó–∞–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
  set_fact:
    pyxis_build_dir: "/tmp/pyxis-build"
    pyxis_version: "0.20.0"
    pyxis_download_url: "https://github.com/NVIDIA/pyxis/archive/v0.20.0.tar.gz"

# =============================================================================
# –°–ò–°–¢–ï–ú–ù–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò (–î–û–ë–ê–í–õ–Ø–ï–ú –¢–û–õ–¨–ö–û –ù–£–ñ–ù–û–ï)
# =============================================================================

- name: "[CONTAINERS] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ libslurm-dev (–¥–ª—è headers)"
  apt:
    name: libslurm-dev
    state: present
    update_cache: yes

# =============================================================================
# –£–°–¢–ê–ù–û–í–ö–ê ENROOT (–û–†–ò–ì–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø)
# =============================================================================

- name: "[CONTAINERS] –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Enroot"
  command: enroot version
  register: enroot_check
  failed_when: false
  changed_when: false

- name: "[CONTAINERS] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Enroot"
  shell: |
    if ! command -v enroot >/dev/null 2>&1; then
      cd /tmp
      wget -q https://github.com/NVIDIA/enroot/releases/download/v3.5.0/enroot_3.5.0-1_amd64.deb
      apt install -y ./enroot_3.5.0-1_amd64.deb
      echo "Enroot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
      echo "Enroot —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
  register: enroot_install

# =============================================================================
# –£–°–¢–ê–ù–û–í–ö–ê ENROOT+CAPS (–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ù–ê COMPUTE –£–ó–õ–ê–•)
# =============================================================================

- name: "[CONTAINERS] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ enroot+caps –Ω–∞ compute —É–∑–ª–∞—Ö (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)"
  shell: |
    echo "=== –£–°–¢–ê–ù–û–í–ö–ê ENROOT+CAPS ==="
    cd /tmp
    
    # –°–∫–∞—á–∏–≤–∞–µ–º enroot+caps –≤–µ—Ä—Å–∏—é
    wget -q https://github.com/NVIDIA/enroot/releases/download/v3.5.0/enroot+caps_3.5.0-1_amd64.deb
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
    dpkg -i enroot+caps_3.5.0-1_amd64.deb
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º capabilities
    echo "‚úÖ Capabilities —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:"
    getcap /usr/bin/enroot-aufs2ovlfs || echo "capabilities –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    echo "‚úÖ enroot+caps —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {{ inventory_hostname }}"
  when: inventory_hostname in groups['slurm_compute']
  register: enroot_caps_install

- name: "[CONTAINERS] –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ enroot+caps"
  debug:
    var: enroot_caps_install.stdout_lines
  when: 
    - inventory_hostname in groups['slurm_compute']
    - enroot_caps_install is defined

# =============================================================================
# –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê PYXIS (–ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï!)
# =============================================================================

- name: "[PYXIS] –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤"
  file:
    path: "{{ pyxis_build_dir }}"
    state: absent

- name: "[PYXIS] –°–æ–∑–¥–∞–Ω–∏–µ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
  file:
    path: "{{ pyxis_build_dir }}"
    state: directory
    mode: '0755'

- name: "[PYXIS] –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤"
  get_url:
    url: "{{ pyxis_download_url }}"
    dest: "/tmp/pyxis-{{ pyxis_version }}.tar.gz"
    timeout: 300

- name: "[PYXIS] –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤"
  unarchive:
    src: "/tmp/pyxis-{{ pyxis_version }}.tar.gz"
    dest: "{{ pyxis_build_dir }}"
    remote_src: yes
    extra_opts: ["--strip-components=1"]

- name: "[PYXIS] –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –∫–æ–º–ø–∏–ª—è—Ü–∏—è"
  shell: |
    cd {{ pyxis_build_dir }}
    
    echo "=== –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ö–û–ú–ü–ò–õ–Ø–¶–ò–Ø PYXIS ==="
    
    # –ü–†–û–ë–£–ï–ú –ù–ï–°–ö–û–õ–¨–ö–û –ü–£–¢–ï–ô –ö HEADERS
    if [ -f /opt/slurm/include/slurm/spank.h ]; then
      HEADER_PATH="/opt/slurm/include"
      echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à–∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ headers: $HEADER_PATH"
    elif [ -f /usr/include/slurm/spank.h ]; then
      HEADER_PATH="/usr/include"
      echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ headers: $HEADER_PATH"
    else
      echo "‚ùå Headers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
      exit 1
    fi
    
    # –ü–†–û–ë–£–ï–ú –ù–ï–°–ö–û–õ–¨–ö–û –ü–£–¢–ï–ô –ö –ë–ò–ë–õ–ò–û–¢–ï–ö–ê–ú
    if [ -f /opt/slurm/lib/libslurm.so ]; then
      LIB_PATH="/opt/slurm/lib"
      echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à–∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: $LIB_PATH"
    elif [ -f /usr/lib/x86_64-linux-gnu/libslurm.so ]; then
      LIB_PATH="/usr/lib/x86_64-linux-gnu"
      echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: $LIB_PATH"
    else
      echo "‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
      exit 1
    fi
    
    # –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
    export CPPFLAGS="-I${HEADER_PATH}"
    export LDFLAGS="-L${LIB_PATH}"
    
    make clean || true
    make
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞
    make install
    
    echo "‚úÖ Pyxis —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    ls -la /usr/local/lib/slurm/spank_pyxis.so
    
  register: pyxis_install

# =============================================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø (–ò–°–ü–†–ê–í–õ–Ø–ï–ú –¢–û–õ–¨–ö–û –ü–£–¢–¨)
# =============================================================================

- name: "[CONFIG] –°–æ–∑–¥–∞–Ω–∏–µ –ü–†–ê–í–ò–õ–¨–ù–û–ì–û plugstack.conf"
  copy:
    dest: /etc/slurm/plugstack.conf
    content: |
      # Slurm SPANK Plugin Stack Configuration
      required /usr/local/lib/slurm/spank_pyxis.so
    owner: root
    group: root
    mode: '0644'

# =============================================================================
# –î–ò–†–ï–ö–¢–û–†–ò–ò ENROOT (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô)
# =============================================================================

- name: "[ENROOT] –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π Enroot"
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /var/lib/enroot
    - /var/cache/enroot
    - /run/enroot
    - /etc/enroot

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ô ENROOT –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ü–†–ê–í–ê–ú–ò
# =============================================================================

- name: "[ENROOT] –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π Enroot —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏"
  shell: |
    echo "=== –°–û–ó–î–ê–ù–ò–ï ENROOT –î–ò–†–ï–ö–¢–û–†–ò–ô ==="
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p /var/lib/enroot-cache /run/enroot /tmp/enroot-data /etc/enroot
    
    # –°–Ω–∏–º–∞–µ–º immutable –∞—Ç—Ä–∏–±—É—Ç—ã
    chattr -i /var/lib/enroot-cache /run/enroot /tmp/enroot-data 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ 1777
    chmod 1777 /var/lib/enroot-cache /run/enroot /tmp/enroot-data
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º
    ls -ld /var/lib/enroot-cache /run/enroot /tmp/enroot-data
    
  register: enroot_dirs_setup

# =============================================================================
# –ü–†–û–î–ê–ö–®–ù –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ENROOT (–ù–û–í–û–ï!)
# =============================================================================

- name: "[ENROOT] –ü—Ä–æ–¥–∞–∫—à–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Enroot"
  template:
    src: enroot.conf.j2
    dest: /etc/enroot/enroot.conf
    owner: root
    group: root
    mode: '0644'
  tags: config

# =============================================================================
# –ú–ò–ù–ò–ú–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
# =============================================================================

- name: "[VERIFY] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
  shell: |
    echo "=== –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô ==="
    
    if [ -f /usr/local/lib/slurm/spank_pyxis.so ]; then
      echo "‚úÖ Pyxis plugin: $(ls -la /usr/local/lib/slurm/spank_pyxis.so)"
    else
      echo "‚ùå Pyxis plugin –ù–ï –ù–ê–ô–î–ï–ù"
    fi
    
    if [ -f /etc/slurm/plugstack.conf ]; then
      echo "‚úÖ plugstack.conf:"
      cat /etc/slurm/plugstack.conf
    else
      echo "‚ùå plugstack.conf –ù–ï –ù–ê–ô–î–ï–ù"
    fi
    
    {% if inventory_hostname in groups['slurm_compute'] %}
    echo "‚úÖ Enroot+caps check:"
    getcap /usr/bin/enroot-aufs2ovlfs 2>/dev/null || echo "capabilities –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    {% endif %}
    
  register: fix_verify
  changed_when: false

- name: "[CONTAINERS] –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
  debug:
    msg: |
      üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã:
      {{ fix_verify.stdout }}
      
      {% if inventory_hostname in groups['slurm_compute'] %}
      üéØ –ù–∞ compute —É–∑–ª–µ —Ç–∞–∫–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω enroot+caps
      {% endif %}
      
      –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ slurmd:
      sudo systemctl restart slurmd