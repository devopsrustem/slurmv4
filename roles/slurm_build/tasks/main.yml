# roles/slurm_build/tasks/main.yml
---
# –†–æ–ª—å: slurm_build - –∫–æ–º–ø–∏–ª—è—Ü–∏—è Slurm 25.05.1 —Å JWT –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
# Ubuntu 24.04 + –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –†–ê–°–ü–†–û–°–¢–†–ê–ù–ï–ù–ò–ï HEADERS

- name: "[SLURM_BUILD] –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ Slurm"
  debug:
    msg: "üîß –°–±–æ—Ä–∫–∞ Slurm {{ slurm_version }} —Å JWT –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–∞ {{ inventory_hostname }}"

- name: "[SLURM_BUILD] –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π —Å–±–æ—Ä–∫–∏"
  shell: rm -rf {{ slurm_build_dir }}
  when: inventory_hostname in groups['slurm_master']

# =============================================================================
# –ü–û–î–ì–û–¢–û–í–ö–ê –ö –°–ë–û–†–ö–ï (–¢–û–õ–¨–ö–û –ù–ê MASTER)
# =============================================================================

- name: "[SLURM_BUILD] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Å–±–æ—Ä–∫–∏"
  apt:
    name: "{{ slurm_build_dependencies }}"
    state: present
  when: inventory_hostname in groups['slurm_master']
  tags:
    - dependencies

- name: "[SLURM_BUILD] –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–±–æ—Ä–∫–∏"
  file:
    path: "{{ slurm_build_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: inventory_hostname in groups['slurm_master']
  tags:
    - download
    - build

- name: "[SLURM_BUILD] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤"
  stat:
    path: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}.tar.bz2"
  register: slurm_tarball
  when: inventory_hostname in groups['slurm_master']
  tags:
    - download

- name: "[SLURM_BUILD] –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ Slurm {{ slurm_version }}"
  get_url:
    url: "{{ slurm_download_url }}"
    dest: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}.tar.bz2"
    mode: '0644'
    timeout: 300
  when: 
    - inventory_hostname in groups['slurm_master']
    - not slurm_tarball.stat.exists
  tags:
    - download

- name: "[SLURM_BUILD] –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ Slurm"
  unarchive:
    src: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}.tar.bz2"
    dest: "{{ slurm_build_dir }}"
    remote_src: yes
    creates: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}"
  when: inventory_hostname in groups['slurm_master']
  tags:
    - build

# =============================================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –°–ë–û–†–ö–ê
# =============================================================================

- name: "[SLURM_BUILD] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ Slurm —Å JWT –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
  shell: |
    cd {{ slurm_build_dir }}/slurm-{{ slurm_version }}
    ./configure \
      --prefix={{ slurm_install_prefix }} \
      --sysconfdir=/etc/slurm \
      --enable-mysql \
      --with-mysql_config=/usr/bin \
      --with-munge \
      --with-hwloc \
      --with-json \
      --with-ssl \
      --with-jwt \
      --enable-multiple-scontrollers \
      --enable-pam \
      --with-pam_dir=/lib/x86_64-linux-gnu/security/ \
      --with-pmix \
      --with-systemd \
      --enable-slurmrestd \
      --enable-debug \
      --enable-developer
  args:
    chdir: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}"
    creates: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}/config.log"
  when: inventory_hostname in groups['slurm_master']
  register: slurm_configure
  tags:
    - build

- name: "[SLURM_BUILD] –ö–æ–º–ø–∏–ª—è—Ü–∏—è Slurm (—ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Ä–µ–º—è...)"
  shell: |
    cd {{ slurm_build_dir }}/slurm-{{ slurm_version }}
    make -j$(nproc)
  args:
    chdir: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}"
    creates: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}/src/slurmctld/slurmctld"
  when: inventory_hostname in groups['slurm_master']
  register: slurm_compile
  tags:
    - build

- name: "[SLURM_BUILD] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Slurm –Ω–∞ master"
  shell: |
    cd {{ slurm_build_dir }}/slurm-{{ slurm_version }}
    make install
  args:
    chdir: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}"
    creates: "{{ slurm_install_prefix }}/sbin/slurmctld"
  when: inventory_hostname in groups['slurm_master']
  register: slurm_install
  tags:
    - build

- name: "[SLURM_BUILD] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ development —Ñ–∞–π–ª–æ–≤ (headers –¥–ª—è Pyxis)"
  shell: |
    cd {{ slurm_build_dir }}/slurm-{{ slurm_version }}
    # –ö–æ–ø–∏—Ä—É–µ–º headers –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
    mkdir -p {{ slurm_install_prefix }}/include/slurm
    cp -r slurm/*.h {{ slurm_install_prefix }}/include/slurm/
    # –ö–æ–ø–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—ã–π header –∏–∑ src
    cp src/slurmd/slurmd.h {{ slurm_install_prefix }}/include/slurm/ 2>/dev/null || true
    echo "Headers —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ {{ slurm_install_prefix }}/include/slurm/"
  args:
    chdir: "{{ slurm_build_dir }}/slurm-{{ slurm_version }}"
    creates: "{{ slurm_install_prefix }}/include/slurm/spank.h"
  when: inventory_hostname in groups['slurm_master']
  register: slurm_dev_install
  tags:
    - build
    - dev

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï NFS –ê–†–•–ò–í–ê –î–õ–Ø –†–ê–°–ü–†–û–°–¢–†–ê–ù–ï–ù–ò–Ø (–ò–°–ü–†–ê–í–õ–ï–ù–û!)
# =============================================================================

- name: "[SLURM_BUILD] –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Slurm –Ω–∞ –≤—Å–µ—Ö —É–∑–ª–∞—Ö"
  file:
    path: "{{ slurm_install_prefix }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - distribute

- name: "[SLURM_BUILD] –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ Slurm –≤ NFS"
  shell: |
    set -e
    echo "=== –°–û–ó–î–ê–ù–ò–ï –ê–†–•–ò–í–ê SLURM + HEADERS ==="
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
    rm -rf /sw/slurm-complete
    mkdir -p /sw/slurm-complete
    
    # –ö–æ–ø–∏—Ä—É–µ–º –í–°–Å –∏–∑ /opt/slurm
    echo "–ö–æ–ø–∏—Ä—É–µ–º binaries..."
    cp -r {{ slurm_install_prefix }}/* /sw/slurm-complete/
    
    # –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ headers —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã!
    if [ -f /sw/slurm-complete/include/slurm/spank.h ]; then
      echo "‚úÖ Headers –≤–∫–ª—é—á–µ–Ω—ã –≤ –∞—Ä—Ö–∏–≤: $(find /sw/slurm-complete/include -name '*.h' | wc -l) —Ñ–∞–π–ª–æ–≤"
    else
      echo "‚ùå –û–®–ò–ë–ö–ê: Headers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∞—Ä—Ö–∏–≤–µ!"
      exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    chown -R root:root /sw/slurm-complete
    chmod -R 755 /sw/slurm-complete/bin /sw/slurm-complete/sbin
    chmod -R 644 /sw/slurm-complete/include
    
    echo "=== –ê–†–•–ò–í –ì–û–¢–û–í ==="
    echo "Binaries: $(ls /sw/slurm-complete/bin | wc -l) —Ñ–∞–π–ª–æ–≤"
    echo "Daemons: $(ls /sw/slurm-complete/sbin | wc -l) —Ñ–∞–π–ª–æ–≤"
    echo "Headers: $(find /sw/slurm-complete/include -name '*.h' | wc -l) —Ñ–∞–π–ª–æ–≤"
    echo "Libs: $(ls /sw/slurm-complete/lib | wc -l) —Ñ–∞–π–ª–æ–≤"
  when: inventory_hostname in groups['slurm_master']
  register: archive_creation
  tags:
    - distribute

- name: "[SLURM_BUILD] –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞"
  debug:
    var: archive_creation.stdout_lines
  when: inventory_hostname in groups['slurm_master']
  tags:
    - distribute

- name: "[SLURM_BUILD] –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏–≤–∞"
  wait_for:
    path: "/sw/slurm-complete/include/slurm/spank.h"
    timeout: 30
  when: inventory_hostname not in groups['slurm_master']
  tags:
    - distribute

- name: "[SLURM_BUILD] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Slurm –Ω–∞ –≤—Å–µ —É–∑–ª—ã –∏–∑ –∞—Ä—Ö–∏–≤–∞"
  shell: |
    set -e
    echo "=== –£–°–¢–ê–ù–û–í–ö–ê SLURM –ò–ó –ê–†–•–ò–í–ê ==="
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º slurmd –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
    systemctl stop slurmd 2>/dev/null || true
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å—ë –∏–∑ –∞—Ä—Ö–∏–≤–∞
    cp -r /sw/slurm-complete/* {{ slurm_install_prefix }}/
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    chown -R root:root {{ slurm_install_prefix }}
    chmod -R 755 {{ slurm_install_prefix }}/bin {{ slurm_install_prefix }}/sbin
    chmod -R 644 {{ slurm_install_prefix }}/include
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ headers —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    if [ -f {{ slurm_install_prefix }}/include/slurm/spank.h ]; then
      echo "‚úÖ Headers —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: $(find {{ slurm_install_prefix }}/include -name '*.h' | wc -l) —Ñ–∞–π–ª–æ–≤"
    else
      echo "‚ùå –û–®–ò–ë–ö–ê: Headers –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
      exit 1
    fi
    
    echo "=== –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ==="
  when: inventory_hostname not in groups['slurm_master']
  register: slurm_install_nodes
  tags:
    - distribute

- name: "[SLURM_BUILD] –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —É–∑–ª–∞—Ö"
  debug:
    var: slurm_install_nodes.stdout_lines
  when: inventory_hostname not in groups['slurm_master']
  tags:
    - distribute

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –ü–£–¢–ï–ô –ò –°–ò–°–¢–ï–ú–ù–´–• –§–ê–ô–õ–û–í
# =============================================================================

- name: "[SLURM_BUILD] –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ Slurm"
  file:
    src: "{{ slurm_install_prefix }}/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
    force: yes
  loop:
    - sinfo
    - squeue
    - scancel
    - sbatch
    - salloc
    - srun
    - sacct
    - scontrol
    - sprio
    - smap
    - sdiag
    - sstat
    - sreport
    - sacctmgr
    - sattach
    - sbcast
    - sshare
    - sview
  tags:
    - links

- name: "[SLURM_BUILD] –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–µ–º–æ–Ω–æ–≤ Slurm"
  file:
    src: "{{ slurm_install_prefix }}/sbin/{{ item }}"
    dest: "/usr/sbin/{{ item }}"
    state: link
    force: yes
  loop:
    - slurmctld
    - slurmd
    - slurmdbd
    - slurmrestd
    - slurmstepd
  tags:
    - links

- name: "[SLURM_BUILD] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ—á–Ω–æ–≥–æ –∫–µ—à–∞"
  shell: ldconfig
  tags:
    - links

# =============================================================================
# –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò
# =============================================================================

- name: "[SLURM_BUILD] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Slurm"
  command: "{{ slurm_install_prefix }}/bin/sinfo -V"
  register: slurm_version_check
  changed_when: false
  failed_when: false
  tags:
    - verify

- name: "[SLURM_BUILD] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ JWT"
  shell: "{{ slurm_install_prefix }}/sbin/slurmctld -V 2>&1 | grep -i jwt || echo 'JWT support check'"
  register: jwt_check
  changed_when: false
  failed_when: false
  tags:
    - verify

- name: "[SLURM_BUILD] –ü—Ä–æ–≤–µ—Ä–∫–∞ headers (–ö–†–ò–¢–ò–ß–ù–û –î–õ–Ø PYXIS!)"
  shell: |
    if [ -f {{ slurm_install_prefix }}/include/slurm/spank.h ]; then
      echo "‚úÖ Headers –Ω–∞–π–¥–µ–Ω—ã: $(find {{ slurm_install_prefix }}/include -name '*.h' | wc -l) —Ñ–∞–π–ª–æ–≤"
      echo "‚úÖ spank.h: $(ls -la {{ slurm_install_prefix }}/include/slurm/spank.h)"
    else
      echo "‚ùå Headers –ù–ï –ù–ê–ô–î–ï–ù–´ - Pyxis –ù–ï –°–ö–û–ú–ü–ò–õ–ò–†–£–ï–¢–°–Ø!"
    fi
  register: headers_check
  changed_when: false
  failed_when: false
  tags:
    - verify

- name: "[SLURM_BUILD] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏"
  debug:
    msg: |
      ‚úÖ Slurm —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {{ inventory_hostname }}
      üìã –í–µ—Ä—Å–∏—è: {{ slurm_version_check.stdout }}
      üîê JWT –ø–æ–¥–¥–µ—Ä–∂–∫–∞: {{ jwt_check.stdout }}
      üìÅ Headers: {{ headers_check.stdout }}
      üìç –ü—É—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {{ slurm_install_prefix }}
      üîó –ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ /usr/bin/, –¥–µ–º–æ–Ω—ã –≤ /usr/sbin/
  tags:
    - verify

- name: "[SLURM_BUILD] –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
  debug:
    msg: "üéâ Slurm {{ slurm_version }} —Å headers –≥–æ—Ç–æ–≤ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–∞ {{ inventory_hostname }}"