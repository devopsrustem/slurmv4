# playbooks/test_containers.yml
---
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Enroot + Pyxis

- name: "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enroot + Pyxis"
  hosts: slurm_cluster
  become: true
  gather_facts: true
  
  tasks:
    - name: "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"
      debug:
        msg: |
          üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ù–û–ô –ü–û–î–î–ï–†–ñ–ö–ò
          =============================================
          üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º: Enroot, Pyxis, SPANK –ø–ª–∞–≥–∏–Ω
          üéÆ GPU: {{ ansible_processor_vcpus }} CPU, {{ (ansible_memtotal_mb/1024)|round(1) }}GB RAM
          üìç –£–∑–µ–ª: {{ inventory_hostname }}
          =============================================

    # =======================================================================
    # –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
    # =======================================================================
    
    - name: "[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Enroot"
      command: enroot version
      register: enroot_version_test
      changed_when: false
      failed_when: false
      tags: verify
    
    - name: "[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ SPANK –ø–ª–∞–≥–∏–Ω–∞ Pyxis"
      stat:
        path: /usr/local/pyxis/lib/slurm/spank_pyxis.so
      register: pyxis_spank_test
      tags: verify
    
    - name: "[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ plugstack.conf"
      command: grep -q "spank_pyxis.so" /etc/slurm/plugstack.conf
      register: plugstack_test
      changed_when: false
      failed_when: false
      tags: verify
    
    # =======================================================================
    # –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò
    # =======================================================================
    
    - name: "[TEST] –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç Enroot"
      shell: |
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        timeout 60 enroot import docker://hello-world 2>/dev/null || echo "Import test completed"
        enroot list 2>/dev/null || echo "List test completed"
      register: enroot_basic_test
      changed_when: false
      failed_when: false
      become_user: root
      tags: test_basic
    
    - name: "[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
      shell: |
        if command -v nvidia-smi >/dev/null 2>&1; then
          echo "GPU_COUNT=$(nvidia-smi -L | wc -l)"
          echo "GPU_DRIVER=$(nvidia-smi --query-gpu=driver_version --format=csv,noheader,nounits | head -1)"
          echo "GPU_STATUS=available"
        else
          echo "GPU_STATUS=unavailable"
        fi
      register: gpu_availability_test
      changed_when: false
      tags: test_gpu
    
    # =======================================================================
    # –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° SLURM (—Ç–æ–ª—å–∫–æ –Ω–∞ compute —É–∑–ª–∞—Ö)
    # =======================================================================
    
    - name: "[TEST] –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Pyxis —Å Slurm"
      shell: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ SPANK –ø–ª–∞–≥–∏–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
        if command -v slurmd >/dev/null 2>&1; then
          slurmd -V 2>&1 | grep -i spank || echo "SPANK info not available"
          echo "SLURM_VERSION=$(slurmd -V | head -1)"
        else
          echo "SLURMD_STATUS=not_available"
        fi
      register: slurm_integration_test
      changed_when: false
      when: inventory_hostname in groups['slurm_compute']
      tags: test_integration
    
    # =======================================================================
    # –¢–ï–°–¢ –ü–†–ê–í –ò –î–ò–†–ï–ö–¢–û–†–ò–ô
    # =======================================================================
    
    - name: "[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º"
      shell: |
        echo "=== –î–ò–†–ï–ö–¢–û–†–ò–ò ENROOT ==="
        ls -la /var/lib/enroot/ 2>/dev/null || echo "/var/lib/enroot –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        ls -la /var/cache/enroot/ 2>/dev/null || echo "/var/cache/enroot –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        ls -la /run/enroot/ 2>/dev/null || echo "/run/enroot –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        
        echo "=== PROLOG/EPILOG –°–ö–†–ò–ü–¢–´ ==="
        ls -la /etc/slurm/prolog.d/ 2>/dev/null || echo "prolog.d –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        ls -la /etc/slurm/epilog.d/ 2>/dev/null || echo "epilog.d –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        
        echo "=== BIND MOUNTS ==="
        mount | grep -E "(home|sw)" || echo "NFS mounts –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
      register: permissions_test
      changed_when: false
      tags: test_permissions

# ==========================================================================
# –û–¢–ß–ï–¢ –û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
# ==========================================================================

- name: "üìä –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Enroot + Pyxis"
      debug:
        msg: |
          ==========================================
          üß™ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ö–û–ù–¢–ï–ô–ù–ï–†–û–í
          ==========================================
          
          {% for host in groups['slurm_cluster'] %}
          üñ•Ô∏è {{ host }}:
          {% set host_vars = hostvars[host] %}
          üì¶ Enroot: {{ host_vars.enroot_version_test.stdout | default('–æ—à–∏–±–∫–∞') }}
          üîå Pyxis SPANK: {{ host_vars.pyxis_spank_test.stat.exists | default(false) | ternary('‚úÖ –Ω–∞–π–¥–µ–Ω', '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω') }}
          ‚öôÔ∏è Plugstack: {{ host_vars.plugstack_test.rc | default(1) == 0 | ternary('‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω', '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω') }}
          
          {% if host_vars.gpu_availability_test.stdout is defined %}
          üéÆ GPU: {{ host_vars.gpu_availability_test.stdout | regex_search('GPU_STATUS=(.+)', '\\1') | first | default('–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') }}
          {% endif %}
          
          {% if host in groups['slurm_compute'] and host_vars.slurm_integration_test.stdout is defined %}
          üîó Slurm: {{ host_vars.slurm_integration_test.stdout | regex_search('SLURM_VERSION=(.+)', '\\1') | first | default('–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω') }}
          {% endif %}
          
          {% endfor %}
          
          ==========================================
          üöÄ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:
          ==========================================
          
          # –ü—Ä–æ—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:
          srun --container-image=docker://hello-world
          
          # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è:
          srun --pty --container-image=docker://ubuntu:20.04 /bin/bash
          
          # –° GPU (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã):
          srun --gpus=1 --container-image=nvcr.io/nvidia/pytorch:latest nvidia-smi
          
          # Batch –∑–∞–¥–∞—á–∞:
          sbatch --wrap="echo 'Container test'" --container-image=docker://ubuntu:20.04
          
          ==========================================
      run_once: true