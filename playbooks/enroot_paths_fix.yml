---
- name: "🔧 ИСПРАВЛЕНИЕ ПУТЕЙ ENROOT"
  hosts: slurm_cluster
  become: true
  gather_facts: false
  
  tasks:
    - name: "🔍 Диагностика текущих путей enroot"
      shell: |
        echo "=== ДИАГНОСТИКА ПУТЕЙ ENROOT ==="
        echo "Поиск импортированных образов:"
        find /var -name "*hello-world*" 2>/dev/null || echo "Образы не найдены"
        echo ""
        
        echo "Содержимое /var/cache/enroot:"
        ls -la /var/cache/enroot/ 2>/dev/null || echo "Директория пуста"
        echo ""
        
        echo "Содержимое /var/lib/enroot:"
        ls -la /var/lib/enroot/ 2>/dev/null || echo "Директория пуста"
        echo ""
        
        echo "Текущая конфигурация enroot:"
        cat /etc/enroot/enroot.conf
        
      register: paths_diag
      
    - name: "📊 Результат диагностики"
      debug:
        var: paths_diag.stdout_lines
        
    - name: "🔧 Создание правильной конфигурации enroot с пользовательскими путями"
      copy:
        dest: /etc/enroot/enroot.conf
        content: |
          # Правильная конфигурация для Ubuntu 24.04
          ENROOT_DATA_PATH /var/lib/enroot
          ENROOT_CACHE_PATH /var/cache/enroot
          ENROOT_RUNTIME_PATH /run/enroot
          ENROOT_TEMP_PATH /tmp
          
          # User namespaces
          ENROOT_REMAP_ROOT yes
          
          # Bind mounts
          ENROOT_MOUNT_HOME /home:/home
          ENROOT_MOUNT_HOME /sw:/sw
          
          # Пользовательские директории (ИСПРАВЛЕНИЕ!)
          ENROOT_RUNTIME_PATH_STRATEGY user
          
          # Безопасность для пользователей
          ENROOT_ROOTFS_WRITABLE yes
          ENROOT_ALLOW_SETUID yes
          ENROOT_ALLOW_PRIVILEGED yes
          ENROOT_RESTRICT_DEV no
          
          # Простая стратегия
          ENROOT_SQUASH_OPTIONS -comp gzip
        owner: root
        group: root
        mode: '0644'
        
    - name: "🔧 Создание пользовательских директорий для enroot"
      shell: |
        echo "=== СОЗДАНИЕ ПОЛЬЗОВАТЕЛЬСКИХ ДИРЕКТОРИЙ ==="
        
        # Создаем пользовательские директории для master
        mkdir -p /var/cache/enroot/master
        mkdir -p /var/lib/enroot/master  
        mkdir -p /run/enroot/master
        
        # Устанавливаем права для пользователя master
        chown -R master:master /var/cache/enroot/master
        chown -R master:master /var/lib/enroot/master
        chown -R master:master /run/enroot/master
        
        # Права на основные директории
        chmod 1777 /var/cache/enroot /run/enroot
        chmod 755 /var/lib/enroot
        
        echo "✅ Пользовательские директории созданы"
        echo "Cache: /var/cache/enroot/master"
        echo "Data: /var/lib/enroot/master"  
        echo "Runtime: /run/enroot/master"
        
      register: user_dirs
      
    - name: "🔧 Альтернативная конфигурация - все в домашней директории"
      copy:
        dest: /etc/enroot/enroot.conf
        content: |
          # Альтернативная конфигурация - в домашней директории
          ENROOT_DATA_PATH $HOME/.local/share/enroot
          ENROOT_CACHE_PATH $HOME/.cache/enroot
          ENROOT_RUNTIME_PATH /tmp/enroot-$USER
          ENROOT_TEMP_PATH /tmp
          
          # User namespaces  
          ENROOT_REMAP_ROOT yes
          
          # Bind mounts
          ENROOT_MOUNT_HOME /home:/home
          ENROOT_MOUNT_HOME /sw:/sw
          
          # Полные права для пользователей
          ENROOT_ROOTFS_WRITABLE yes
          ENROOT_ALLOW_SETUID yes  
          ENROOT_ALLOW_PRIVILEGED yes
          ENROOT_RESTRICT_DEV no
          
          # Простая стратегия
          ENROOT_SQUASH_OPTIONS -comp gzip
        owner: root
        group: root
        mode: '0644'
        
    - name: "📊 Результат создания директорий"
      debug:
        var: user_dirs.stdout_lines

- name: "🧪 ТЕСТ ИСПРАВЛЕНИЯ ПУТЕЙ"
  hosts: slurm_compute
  become: false
  tasks:
    - name: "🧪 Тест enroot с новыми путями"
      shell: |
        echo "=== ТЕСТ ENROOT С НОВЫМИ ПУТЯМИ ==="
        echo "Пользователь: $(whoami)"
        echo ""
        
        # Создаем пользовательские директории если нужно
        mkdir -p ~/.local/share/enroot ~/.cache/enroot
        
        echo "1. Очистка старых образов:"
        rm -rf ~/.cache/enroot/* ~/.local/share/enroot/* 2>/dev/null || true
        echo ""
        
        echo "2. Новый импорт:"
        timeout 60 enroot import docker://hello-world 2>&1
        echo ""
        
        echo "3. Список образов:"
        enroot list 2>&1
        echo ""
        
        echo "4. Создание контейнера:"
        timeout 30 enroot create hello-world 2>&1
        echo ""
        
        echo "5. Запуск контейнера:"
        timeout 30 enroot start hello-world echo "ENROOT PATHS FIXED!" 2>&1
        
      register: paths_test
      failed_when: false
      
    - name: "📊 Результат теста путей"
      debug:
        var: paths_test.stdout_lines

- name: "🧪 ФИНАЛЬНЫЙ ТЕСТ SLURM"
  hosts: slurm_master
  become: false
  tasks:
    - name: "🧪 Тест slurm после исправления путей"
      shell: |
        echo "=== ФИНАЛЬНЫЙ ТЕСТ SLURM ==="
        timeout 60 srun --container-image=docker://hello-world ls 2>&1
      register: final_slurm_test
      failed_when: false
      
    - name: "🎉 ФИНАЛЬНЫЙ РЕЗУЛЬТАТ"
      debug:
        msg: |
          {{ final_slurm_test.stdout }}
          
          {% if 'Hello from Docker' in final_slurm_test.stdout %}
          🎉🎉🎉 ПРОБЛЕМА ПОЛНОСТЬЮ РЕШЕНА! 🎉🎉🎉
          {% elif 'ENROOT PATHS FIXED!' in hostvars[groups['slurm_compute'][0]]['paths_test']['stdout'] %}
          🎉 ENROOT РАБОТАЕТ! Проблема была в путях, не в capabilities!
          {% else %}
          💡 Попробуйте ручной тест с новой конфигурацией
          {% endif %}